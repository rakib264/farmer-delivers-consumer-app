{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport GlobalSafeareaStyle from \"../utils/GlobalSafeareaStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AccountScreen = function AccountScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsx(SafeAreaView, {\n    style: GlobalSafeareaStyle.androidSafeArea,\n    children: _jsxs(View, {\n      style: styles.centeredView,\n      children: [_jsx(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: modalVisible,\n        onRequestClose: function onRequestClose() {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        },\n        children: _jsx(View, {\n          style: styles.centeredView,\n          children: _jsxs(View, {\n            style: styles.modalView,\n            children: [_jsx(Text, {\n              style: styles.modalText,\n              children: \"Hello World!\"\n            }), _jsx(Pressable, {\n              style: [styles.button, styles.buttonClose],\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.textStyle,\n                children: \"Hide Modal\"\n              })\n            })]\n          })\n        })\n      }), _jsx(Pressable, {\n        style: [styles.button, styles.buttonOpen],\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"Show Modal\"\n        })\n      })]\n    })\n  });\n};\nexport default AccountScreen;\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"blue\",\n    shadowOffset: {\n      width: 1,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","GlobalSafeareaStyle","AccountScreen","modalVisible","setModalVisible","androidSafeArea","styles","centeredView","Alert","alert","modalView","modalText","button","buttonClose","textStyle","buttonOpen","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"sources":["/Volumes/Redwan/Final/farmex-shop/src/screens/AccountScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View, SafeAreaView } from \"react-native\";\nimport GlobalSafeareaStyle from '../utils/GlobalSafeareaStyle';\n\nconst AccountScreen = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <SafeAreaView style={GlobalSafeareaStyle.androidSafeArea}>\n     <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Hello World!</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </Pressable>\n    </View>\n    </SafeAreaView>\n  )\n}\n\nexport default AccountScreen\n\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"blue\",\n    shadowOffset: {\n      width: 1,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExC,OAAOC,mBAAmB;AAAqC;AAAA;AAE/D,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,gBAAwCF,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDG,YAAY;IAAEC,eAAe;EACpC,OACE,KAAC,YAAY;IAAC,KAAK,EAAEH,mBAAmB,CAACI,eAAgB;IAAA,UACxD,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,YAAa;MAAA,WAChC,KAAC,KAAK;QACJ,aAAa,EAAC,OAAO;QACrB,WAAW,EAAE,IAAK;QAClB,OAAO,EAAEJ,YAAa;QACtB,cAAc,EAAE,0BAAM;UACpBK,KAAK,CAACC,KAAK,CAAC,wBAAwB,CAAC;UACrCL,eAAe,CAAC,CAACD,YAAY,CAAC;QAChC,CAAE;QAAA,UAEF,KAAC,IAAI;UAAC,KAAK,EAAEG,MAAM,CAACC,YAAa;UAAA,UAC/B,MAAC,IAAI;YAAC,KAAK,EAAED,MAAM,CAACI,SAAU;YAAA,WAC5B,KAAC,IAAI;cAAC,KAAK,EAAEJ,MAAM,CAACK,SAAU;cAAA;YAAA,EAAoB,EAClD,KAAC,SAAS;cACR,KAAK,EAAE,CAACL,MAAM,CAACM,MAAM,EAAEN,MAAM,CAACO,WAAW,CAAE;cAC3C,OAAO,EAAE;gBAAA,OAAMT,eAAe,CAAC,CAACD,YAAY,CAAC;cAAA,CAAC;cAAA,UAE9C,KAAC,IAAI;gBAAC,KAAK,EAAEG,MAAM,CAACQ,SAAU;gBAAA;cAAA;YAAkB,EACtC;UAAA;QACP;MACF,EACD,EACR,KAAC,SAAS;QACR,KAAK,EAAE,CAACR,MAAM,CAACM,MAAM,EAAEN,MAAM,CAACS,UAAU,CAAE;QAC1C,OAAO,EAAE;UAAA,OAAMX,eAAe,CAAC,IAAI,CAAC;QAAA,CAAC;QAAA,UAErC,KAAC,IAAI;UAAC,KAAK,EAAEE,MAAM,CAACQ,SAAU;UAAA;QAAA;MAAkB,EACtC;IAAA;EACP,EACQ;AAEnB,CAAC;AAED,eAAeZ,aAAa;AAG5B,IAAMI,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,YAAY,EAAE;IACZW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE;EACb,CAAC;EACDX,SAAS,EAAE;IACTY,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXL,UAAU,EAAE,QAAQ;IACpBM,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MACZC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDpB,MAAM,EAAE;IACNY,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXO,SAAS,EAAE;EACb,CAAC;EACDjB,UAAU,EAAE;IACVQ,eAAe,EAAE;EACnB,CAAC;EACDV,WAAW,EAAE;IACXU,eAAe,EAAE;EACnB,CAAC;EACDT,SAAS,EAAE;IACTmB,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb,CAAC;EACDxB,SAAS,EAAE;IACTyB,YAAY,EAAE,EAAE;IAChBD,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}